Bipartite Graph(Gfg)

class Solution
{
      public boolean check(int src,int V,ArrayList<ArrayList<Integer>>adj,int[] color){
        Queue<Integer> q=new LinkedList<>();
        color[src]=0;
        q.add(src);
        while(!q.isEmpty()){
            int node=q.peek();
            q.remove();
            
            for(Integer ele:adj.get(node)){
                if(color[ele]==-1){
                    color[ele]=1-color[node];
                    q.add(ele);
                }
                if(color[ele]==color[node]) return false;
            }
        }
        return true;
        
    }
    public boolean isBipartite(int V, ArrayList<ArrayList<Integer>>adj)
    {
        int[] color=new int[V];
        for(int i=0;i<V;i++) color[i]=-1;
        
        for(int i=0;i<V;i++){
            if(color[i]==-1){
                if(check(i,V,adj,color)==false) return false;
            }
        }
        return true;
    }
}
