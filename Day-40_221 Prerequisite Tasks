Prerequisite Tasks(Gfg)

class Solution {
    public boolean isPossible(int N,int P, int[][] prerequisites)
    {
        // Your Code goes here
        
        List<List<Integer>> adj = new ArrayList<>();
        for(int i=0;i<N;i++) adj.add(new ArrayList<>());
        int[] indegree = new int[N];
        for(int i=0;i<P;i++){
            int v = prerequisites[i][0];
            int u = prerequisites[i][1];
            adj.get(u).add(v);
            indegree[v]++;
        }
        Queue<Integer> q = new LinkedList<>();
        for(int i=0;i<N;i++){
            if(indegree[i]==0) q.add(i);
        }
        int cnt=0;
        while(!q.isEmpty()){
            int node = q.remove();
            cnt++;
            for(int it:adj.get(node)){
                indegree[it]--;
                if(indegree[it]==0) q.add(it);
            }
        }
        return cnt==N;
    }
    
}
