Directed Graph Cycle(Gfg)


class Solution {
    public boolean isCycle(ArrayList<ArrayList<Integer>> adj, boolean[] vis, boolean[] recStack, int curr) {
        vis[curr] = true;
        recStack[curr] = true;
        for (int neighbor : adj.get(curr)) {
            if (!vis[neighbor]) {
                if (isCycle(adj, vis, recStack, neighbor)) {
                    return true;
                }
            } else if (recStack[neighbor]) {
                return true;
            }
        }

        recStack[curr] = false; 
        return false;
    }
    public boolean isCyclic(int V, ArrayList<ArrayList<Integer>> adj) {
        boolean[] vis = new boolean[V];
        boolean[] recStack = new boolean[V];

        for (int i = 0; i < V; i++) {
            if (!vis[i]) {
                if (isCycle(adj, vis, recStack, i)) {
                    return true;
                }
            }
        }
        return false;
    }
}
