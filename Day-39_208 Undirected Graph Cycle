Undirected Graph Cycle (Gfg)

class Solution {
    // Function to detect cycle in an undirected graph.
    public boolean dfs(boolean [] vis,ArrayList<ArrayList<Integer>> adj,int curr,int parent){
        vis[curr]=true;
        
        for(int i=0;i<adj.get(curr).size();i++){
            if(vis[adj.get(curr).get(i)]==true && adj.get(curr).get(i)!=parent){
                return true;
            }
            if(!vis[adj.get(curr).get(i)]){
                if(dfs(vis,adj,adj.get(curr).get(i),curr)){
                    return true;
                }
            }
        }
        return false;
        
    }
    public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj) {
        boolean [] vis=new boolean[V];
        boolean ans=false;
        for(int i=0;i<V;i++){
            if(!vis[i]){
                ans=dfs(vis,adj,i,-1);
            }
            if(ans){
                break;
            }
        }
        return ans;
    }
}
