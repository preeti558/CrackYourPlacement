BFS of graph (Gfg)

class Solution {
    // Function to return Breadth First Traversal of given graph.
    public ArrayList<Integer> bfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
        ArrayList<Integer> bfs = new ArrayList<>();
        
         boolean[] visited = new boolean[V]; // Array to keep track of visited nodes
        Queue<Integer> queue = new LinkedList<>(); // Queue for BFS
        
        // Start BFS from the first node (assuming 0 is the starting node)
        queue.add(0);
        visited[0] = true;
        
        while (!queue.isEmpty()) {
            int node = queue.poll(); // Get the next node from the queue
            bfs.add(node); // Add this node to the BFS result
            
            // Visit all the adjacent nodes of the current node
            for (int neighbor : adj.get(node)) {
                if (!visited[neighbor]) {
                    queue.add(neighbor); // Add unvisited neighbors to the queue
                    visited[neighbor] = true; // Mark them as visited
                }
            }
        }
        
        return bfs; // Return the BFS traversal list
    }
}
