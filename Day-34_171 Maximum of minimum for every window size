Maximum of minimum for every window size(Gfg)

class Solution 
{
     static int[] maxOfMin(int[] arr, int n) 
    {
        // Your code here
        int[] ans = new int[n];
        Stack<Integer> st = new Stack<>();
        
        for(int i =0;i<n;i++){
            //for parsing through the array
            
            while(!st.isEmpty() && arr[st.peek()]>arr[i]){
                int index = st.pop();
                
                int range;
                if (st.isEmpty()) {
                    range = i; // If the stack is empty, the range is from 0 to i
                } else {
                    range = i - st.peek() - 1; // Use peek() to calculate the range
                }
                ans[range - 1] = Math.max(ans[range - 1], arr[index]);
                
            }
            st.push(i);
        }
        
            while(!st.isEmpty() ){
                int index = st.pop();
                
                 int range;
                if (st.isEmpty()) {
                    range = n; // If the stack is empty, the range is from 0 to n
                } else {
                    range = n - st.peek() - 1; // Use peek() to calculate the range
                }
                ans[range - 1] = Math.max(ans[range - 1], arr[index]);
                
            }
            
            for(int i =n-2;i>=0;i--){
                ans[i]= Math.max(ans[i], ans[i+1]);
            }
            
            return ans;
}
}
