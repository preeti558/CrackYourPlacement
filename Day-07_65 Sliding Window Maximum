239. Sliding Window Maximum

class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        if(nums==null || nums.length==0 || k<=0){
            return new int[0];
        }
        
        int n= nums.length;
        int[] res = new int[n-k+1];
        int ri=0;
        Deque<Integer> deque = new ArrayDeque<>();
        for(int i=0;i<n;i++){
            //sliding window maintain
            while(!deque.isEmpty() && deque.peek() < i-k+1){
                deque.poll();
            }

            while(!deque.isEmpty() && nums[i] >= nums[deque.peekLast()]){
                deque.pollLast();
            }
            deque.offer(i);
            if(i>=k-1){
             res[ri++] = nums[deque.peek()];
            }

        }
        return res;
    }
}
