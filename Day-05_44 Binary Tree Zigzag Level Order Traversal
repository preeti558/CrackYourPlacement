103.Binary Tree Zigzag Level Order Traversal

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
       List<List<Integer>> res = new ArrayList<>();
       if(root == null) return res;
       Queue<TreeNode> queue = new LinkedList<>();
       queue.add(root);
       boolean leftToRight = true;

       while(!queue.isEmpty()){
        int size = queue.size();
        List<Integer> row = new ArrayList<>();
        for(int i=0; i<size ;i++){
        TreeNode node = queue.poll();

        if(leftToRight){
            row.add(node.val);
        }else{
            row.add(0,node.val);
        }

        if(node.left!=null){
          queue.add(node.left);
        }
        if(node.right!=null){
          queue.add(node.right);
        }
        leftToRight = ! leftToRight;
        res.add(row);
        }
       }
       return res;
    
}
